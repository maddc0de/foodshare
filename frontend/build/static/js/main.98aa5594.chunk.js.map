{"version":3,"sources":["components/navbar/logo.svg","components/navbar/Navbar.js","components/login/LoginForm.js","components/Collector/LoginCollector.js","components/Donator/LoginDonator.js","components/Donator/SignUpForm.js","components/Collector/SignUpForm.js","components/donationForm/DonationForm.js","components/donatorfeed/DonatorFeed.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_ref","navigate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","checked","setChecked","useEffect","owner","React","createElement","Fragment","className","style","boxShadow","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","src","require","default","height","margin","role","onChange","newOwner","path","window","location","split","pop","push","join","htmlFor","LoginForm","email","setEmail","password","setPassword","_useState5","_useState6","failMessage","setFailMessage","_useState7","concat","_useState8","_useState9","_useState10","ownerColor","color","onSubmit","event","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","message","console","log","localStorage","setItem","token","usertype","placeholder","value","target","required","onClick","LoginCollector","LoginDonator","DonatorSignUpForm","_useState11","_useState12","_useState13","_useState14","width","marginRight","display","marginLeft","SignUpForm","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","DonationForm","onCreated","foodheroid","content","setContent","getItem","handleSubmit","_ref2","_asyncToGenerator","_callee","_context","Authorization","food_heroes_id","description","_x","apply","arguments","rows","cols","form","DonatorFeed","useParams","showDonationForm","setShowDonationForm","foodHeroId","App","Routes","Route","element","useNavigate","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","StrictMode"],"mappings":"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","file":"static/js/main.98aa5594.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.abc0a552.svg\";","import React, { useState, useEffect } from \"react\";\n\nconst Navbar = (props, { navigate }) => {\n  const [owner, setOwner] = useState(\"\");\n  const [checked, setChecked] = useState(\"\");\n  const changeOwner = () => {\n    let newOwner;\n    if(props.owner === 'Food Rescuer'){\n      newOwner = 'donator';\n    }else{\n      newOwner = 'collector';\n      \n    }\n    let path = window.location.href.split('#')[0].split('/')\n    path.pop()\n    path.push(newOwner)\n    window.location.href = path.join('/')\n  };\n\n  useEffect(() => {\n    if(props.owner !== 'Food Rescuer'){\n      setChecked(\"checked\")\n    }\n  }, []);\n\n  return (\n    <>\n      <nav\n        className=\"navbar navbar-expand-lg navbar-light bg-light\"\n        style={{ boxShadow: \"0 0.125rem 0.125rem 0 rgba(0, 0, 0, .3\" }}\n      >\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarTogglerDemo01\"\n          aria-controls=\"navbarTogglerDemo01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n          \n          <a className=\"navbar-brand ms-5\" href=\"#\">\n            <img\n              src={require(\"./logo.svg\").default}\n              style={{ height: \"4rem\", margin: \"-2rem 0 -0.75rem -1rem\" }}\n            />\n          </a>\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0 d-none\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#\">\n                Disabled\n              </a>\n            </li>\n          </ul>\n          <div className=\"navbar-nav ms-auto me-5\">\n            <div className=\"form-check form-switch\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                id=\"flexSwitchCheckDefault\"\n                onChange={changeOwner}\n                checked = {checked}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                { props.owner }\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useNavigate as navigate } from \"react-router-dom\";\nimport './LoginForm.css';\n\nconst LoginForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [owner, setOwner] = useState(`Login ${props.owner}`);\n  const [ownerColor, setOwnerColor] = useState(\n    props.owner === \"Food Hero\"\n      ? \"form-control btn btn-primary\"\n      : \"form-control btn btn-success\"\n  );\n\n  const HERO = \"Hero\";\n  const RESCUER = \"Rescuer\";\n\n  const navigateToSignup = () => {\n    if (props.owner === \"Food Hero\") {\n      props.navigate(\"/signup/donator\");\n    } else {\n      props.navigate(\"/signup/collector\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"/tokens\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email, password: password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (\"message\" in data && data.message !== \"OK\") {\n          console.log(\"wow sorry\");\n          props.owner === \"Food Hero\"\n            ? props.navigate(\"/login/donator\")\n            : props.navigate(\"/login/collector\");\n          setEmail(\"\");\n          setPassword(\"\");\n          setFailMessage(\n            `Sorry ${props.owner}, we have failed to login, please check the password and email used in the process.`\n          );\n        } else {\n          console.log(\"yay\");\n          window.localStorage.setItem(\"token\", data.token);\n          if (data.usertype === HERO) {\n            props.navigate(`/foodhero/${data.id}`);\n          } else {\n            console.log(RESCUER);\n            // navigate('/foodrescuer');\n          }\n        }\n      });\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n  return (\n    <div className=\"login-form\">\n      <div className=\"container mt-5\">\n        <div className=\"text-center\" style={{ color: \"#dc3545\" }}>\n          {failMessage}\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    placeholder=\"Email\"\n                    id=\"email\"\n                    type=\"text\"\n                    value={email}\n                    onChange={handleEmailChange}\n                    className=\"form-control\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-3\">\n                  <input\n                    role=\"submit-button\"\n                    id=\"submit\"\n                    type=\"submit\"\n                    className={ownerColor}\n                    value={owner}\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-3\">\n                  <label\n                    htmlFor=\"inputButton\"\n                    className=\"col-md-12 text-center\"\n                  >\n                    Not a member? Click here to register\n                  </label>\n                  <input\n                    type=\"button\"\n                    className=\"form-control btn btn-secondary\"\n                    id=\"inputButton\"\n                    value=\"Signup\"\n                    onClick={navigateToSignup}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"col\"></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport Navbar from \"../navbar/Navbar\";\nimport LoginForm from \"../login/LoginForm\";\n\nconst LoginCollector = ({ navigate }) => {\n \n  const [owner, setOwner] = useState(\"Food Rescuer\");\n  // const [picture, SetUserPicture] = useState(\"\");\n\n  \n  return (\n    <>\n      <Navbar owner={owner}></Navbar>\n\n      <LoginForm owner={owner} navigate={navigate}></LoginForm>\n    </>\n  );\n};\n\nexport default LoginCollector;\n","import React, { useState } from \"react\";\nimport Navbar from \"../navbar/Navbar\";\nimport LoginForm from \"../login/LoginForm\";\n\nconst LoginDonator = ({ navigate }) => {\n \n  const [owner, setOwner] = useState(\"Food Hero\");\n  // const [picture, SetUserPicture] = useState(\"\");\n\n  \n  return (\n    <>\n      <Navbar owner={owner}></Navbar>\n\n      <LoginForm owner={owner} navigate={navigate}></LoginForm>\n    </>\n  );\n};\n\nexport default LoginDonator;\n","import React, { useState } from \"react\";\nimport Navbar from \"../navbar/Navbar\";\n\nconst DonatorSignUpForm = ({ navigate }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [usertype, setUserType] = useState(\"Hero\");\n  const [password, setPassword] = useState(\"\");\n  const [owner, setOwner] = useState(\"Food Hero\");\n  // const [picture, SetUserPicture] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const requestBody = JSON.stringify({\n      name: name,\n      email: email,\n      description: description,\n      location: location,\n      usertype: usertype,\n      password: password,\n    });\n\n    fetch(\"/donators\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: requestBody,\n    }).then((response) => {\n      // come back later, and re-make the route\n      if (response.status === 201) {\n        navigate(\"/login\");\n        // setWelcomeMessage(`Welcome ${email}!`)\n      } else {\n        navigate(\"/signup\");\n      }\n    });\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  // const handleUsertypeChange = (event) => {\n  //   setUsertype(event.target.value)\n  // }\n\n  const navigateToLogin = () => {\n    navigate(\"/login/donator\");\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <>\n      <Navbar owner={owner}></Navbar>\n\n      <div className=\"container mt-5\">\n        <div className=\"row mt-5\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n            <form>\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputName3\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputName3\"\n                    placeholder=\"Name\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputEmail4\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"inputEmail4\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputPassword4\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"inputPassword4\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress\">Address</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputAddress\"\n                    placeholder=\"1234 Main St\"\n                  />\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"City\"\n                      style={{\n                        width: \"47.5%\",\n                        marginRight: \"2.5%\",\n                        display: \"inline-block\",\n                      }}\n                    />\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Post Code\"\n                      style={{\n                        width: \"47.5%\",\n                        marginLeft: \"2.5%\",\n                        display: \"inline-block\",\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputDescription\">Description</label>\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputDescription\"\n                    placeholder=\"We are a small Coffee Shop..\"\n                  ></textarea>\n                </div>\n\n                <div className=\"form-group col-md-12 mt-3\">\n                  <input\n                    type=\"button\"\n                    className=\"form-control btn btn-primary\"\n                    value=\"Become a Food Hero\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-3\">\n                  <label\n                    htmlFor=\"inputButton\"\n                    className=\"col-md-12 text-center\"\n                  >\n                    Already a member? Click here to login\n                  </label>\n                  <input\n                    type=\"button\"\n                    className=\"form-control btn btn-secondary\"\n                    id=\"inputButton\"\n                    value=\"Login\"\n                    onClick={navigateToLogin}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"col\"></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DonatorSignUpForm;\n","import React, { useState } from \"react\";\nimport DonatorSignUpForm from \"../Donator/SignUpForm\";\nimport Navbar from \"../navbar/Navbar\";\nimport \"./SignUpForm.css\";\n\nconst SignUpForm = ({ navigate }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usertype, setUserType] = useState(\"Rescuer\");\n  const [owner, setOwner] = useState(\"Food Rescuer\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    formData.append(\"usertype\", usertype);\n\n    fetch(\"/users\", {\n      method: \"POST\",\n      body: formData,\n    }).then((response) => {\n      if (response.status === 201) {\n        navigate(\"/login\");\n      } else {\n        navigate(\"/signup\");\n      }\n    });\n  };\n\n  const navigateToLogin = () => {\n    navigate(\"/login/collector\");\n  }\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleUserTypeChange = (event) => {\n    setUserType(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <>\n      <Navbar owner={owner}></Navbar>\n      \n      <div className=\"container mt-5\">\n        <div className=\"row mt-5\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n            <form>\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputName3\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputName3\"\n                    placeholder=\"Name\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputEmail4\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"inputEmail4\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-1\">\n                  <label htmlFor=\"inputPassword4\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"inputPassword4\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-3\">\n                  <input\n                    type=\"button\"\n                    className=\"form-control btn btn-success\"\n                    value=\"Become a Food Rescuer\"\n                  />\n                </div>\n                <div className=\"form-group col-md-12 mt-3\">\n                  <label htmlFor=\"inputButton\" className=\"col-md-12 text-center\">Already a member? Click here to login</label>\n                  <input\n                    type=\"button\"\n                    className=\"form-control btn btn-secondary\"\n                    id=\"inputButton\"\n                    value=\"Login\"\n                    onClick={navigateToLogin}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"col\"></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n        </div>\n      </div>\n\n      {/* <div className=\"form\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-header\">\n            <p>Please complete the details below to create your account:</p>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"aligned-names\">\n              <div className=\"name-box-space\">\n                <input\n                  placeholder=\"Name\"\n                  id=\"Name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={handleNameChange}\n                  required\n                />\n              </div>\n              <div className=\"user-type-box-space\">\n                <input\n                  placeholder=\"User type\"\n                  id=\"usertype\"\n                  type=\"text\"\n                  value={usertype}\n                  onChange={handleUserTypeChange}\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input id=\"submit\" type=\"submit\" value=\"Become a Food Rescuer\" />\n          </div>\n        </form>\n        <div className=\"Member-redirect\">\n          <input\n            id=\"submit\"\n            type=\"submit\"\n            value=\"Already a member? Click here to login\"\n          />\n        </div>\n      </div> */}\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useState } from 'react';\nimport './DonatorForm.css'\n\nconst DonationForm = ({ onCreated, foodheroid }) => {\n  const [content, setContent] = useState(\"\");\n  const [token, setToken] = useState(window.localStorage.getItem(\"token\"));\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    let response = await fetch( '/donations', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({ food_heroes_id: foodheroid, description: content, token: token })\n    })\n\n    onCreated();\n  }\n\n  const handleContentChange = (event) => {\n    setContent(event.target.value)\n  }\n\n  return (\n    <>\n      <form className=\"add-donation-form\" onSubmit={handleSubmit}>\n        <h1 className=\"make-post-title\">Make a Donation</h1>\n        <textarea className=\"desc-input\" rows=\"4\" cols=\"50\" placeholder=\"type food contents here\" id=\"description\" onChange={handleContentChange} form=\"donationForm\"/>\n        <input className=\"submit-button\" role='submit-button' id='submit' type=\"submit\" value=\"Submit\"/>\n      </form>\n    </>\n  );\n}\n\nexport default DonationForm;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DonationForm from '../donationForm/DonationForm'\nimport './DonatorFeed.css'\n\nconst DonatorFeed = ({ navigate }) => {\n  const { id } = useParams();\n  const [token, setToken] = useState(window.localStorage.getItem(\"token\"));\n  const [showDonationForm, setShowDonationForm] = useState(false);\n  const [foodHeroId, setFoodHeroId] = useState(id);\n\n  const handleAddDonationClick = () => {\n    setShowDonationForm(true);\n  };\n\n  const handleDonationCreated = () => {\n    setShowDonationForm(false);\n  };\n  \n  if(token) {\n    return(\n      <div className=\"feed-container\">\n\n        <h1>Hello, Hero!</h1>\n        \n        {showDonationForm?\n          <div>\n            <DonationForm onCreated={handleDonationCreated} foodheroid={foodHeroId}/>\n          </div> :\n          <div id=\"feed\">\n            <button onClick={handleAddDonationClick}>Add Donation</button>\n            <div id=\"donations-list\" >\n              <h2>Donations</h2>\n            </div>\n          </div>\n        }\n\n      </div>\n    )\n  } else {\n    navigate('/signup/donator')\n  }\n}\n\nexport default DonatorFeed;","import './App.css';\nimport LoginCollector from \"../Collector/LoginCollector\";\nimport LoginDonator from \"../Donator/LoginDonator\";\nimport SignUpForm from \"../Collector/SignUpForm\";\nimport DonatorSignUpForm from '../Donator/SignUpForm';\nimport DonatorFeed from '../donatorfeed/DonatorFeed';\nimport React from \"react\";\nimport { useNavigate, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/signup/collector\" element={<SignUpForm navigate={useNavigate()} />} />\n      <Route path=\"/signup/donator\" element={<DonatorSignUpForm navigate={useNavigate()} />} />\n      <Route path=\"/login/collector\" element={<LoginCollector navigate={useNavigate()} />} />\n      <Route path=\"/login/donator\" element={<LoginDonator navigate={useNavigate()} />} />\n      <Route path=\"/foodhero/:id\" element={<DonatorFeed navigate={useNavigate()} />} />\n    </Routes>\n  );\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}